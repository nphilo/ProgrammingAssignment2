## Cache inverse of matrix

makeCacheMatrix <- function(x = matrix()) {
    m <- NULL 
    set <- function(y) {
      x <<- y #set value of matrix
      m <<- NULL
    }
    get <- function() x #get the value of the matrix
    setinverse <- function(inverse) m <<- inverse #set the value of the inverse
    getinverse <- function() m #get value of the inverse
    list(set = set, get = get,
         setinverse = setinverse,
         getinverse = getinverse)
  }



## Check whether inverse has been calculated by makeCacheMatrix, retrieve inverse from cache

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
  m <- x$getinverse()
  if(!is.null(m)) {
    message("getting cached data")
    return(m)
  }
  data <- x$get()
  m <- solve(data,...)
  x$setinverse(m)
  m
}
